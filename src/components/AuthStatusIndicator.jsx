// Authentication Status Indicator Component
// Provides visual feedback about authentication state and troubleshooting

import React, { useState, useEffect } from 'react';\nimport { validateAuthState } from '../services/authService';\nimport { validateToken } from '../utils/tokenValidator';\n\nconst AuthStatusIndicator = ({ currentUser, isAuthenticated, onAuthIssue }) => {\n  const [authStatus, setAuthStatus] = useState(null);\n  const [showDetails, setShowDetails] = useState(false);\n  const [isChecking, setIsChecking] = useState(false);\n\n  useEffect(() => {\n    if (isAuthenticated && currentUser) {\n      checkAuthStatus();\n    } else {\n      setAuthStatus(null);\n    }\n  }, [isAuthenticated, currentUser]);\n\n  const checkAuthStatus = async () => {\n    setIsChecking(true);\n    try {\n      const result = await validateAuthState(currentUser);\n      setAuthStatus(result);\n      \n      if (!result.valid && onAuthIssue) {\n        onAuthIssue(result);\n      }\n    } catch (error) {\n      setAuthStatus({\n        valid: false,\n        error: error.message,\n        code: 'CHECK_ERROR'\n      });\n    } finally {\n      setIsChecking(false);\n    }\n  };\n\n  const getStatusColor = () => {\n    if (isChecking) return 'text-yellow-600';\n    if (!authStatus) return 'text-gray-500';\n    return authStatus.valid ? 'text-green-600' : 'text-red-600';\n  };\n\n  const getStatusIcon = () => {\n    if (isChecking) return '⏳';\n    if (!authStatus) return '⚪';\n    return authStatus.valid ? '✅' : '❌';\n  };\n\n  const getStatusText = () => {\n    if (isChecking) return 'Checking authentication...';\n    if (!authStatus) return 'Not authenticated';\n    return authStatus.valid ? 'Authentication valid' : 'Authentication issue';\n  };\n\n  const getErrorDetails = () => {\n    if (!authStatus || authStatus.valid) return null;\n    \n    const errorMessages = {\n      'NO_USER': 'No user session found',\n      'NO_TOKEN': 'No authentication token available',\n      'INVALID_FORMAT': 'Invalid token format',\n      'EXPIRED': 'Authentication token has expired',\n      'VALIDATION_ERROR': 'Token validation failed'\n    };\n    \n    return errorMessages[authStatus.code] || authStatus.error;\n  };\n\n  const getSuggestions = () => {\n    if (!authStatus || authStatus.valid) return null;\n    \n    const suggestions = {\n      'NO_USER': 'Please log in to continue',\n      'NO_TOKEN': 'Please log out and log back in',\n      'INVALID_FORMAT': 'Please log out and log back in',\n      'EXPIRED': 'Your session has expired. Please log in again',\n      'VALIDATION_ERROR': 'Please refresh the page and try again'\n    };\n    \n    return suggestions[authStatus.code] || 'Please try logging out and logging back in';\n  };\n\n  if (!isAuthenticated) {\n    return null; // Don't show anything if user is not supposed to be authenticated\n  }\n\n  return (\n    <div className=\"auth-status-indicator\">\n      <div className=\"flex items-center space-x-2\">\n        <span className={`text-sm ${getStatusColor()}`}>\n          {getStatusIcon()} {getStatusText()}\n        </span>\n        \n        {authStatus && !authStatus.valid && (\n          <button\n            onClick={() => setShowDetails(!showDetails)}\n            className=\"text-xs text-blue-600 hover:text-blue-800 underline\"\n          >\n            {showDetails ? 'Hide details' : 'Show details'}\n          </button>\n        )}\n        \n        <button\n          onClick={checkAuthStatus}\n          disabled={isChecking}\n          className=\"text-xs text-gray-600 hover:text-gray-800 underline\"\n        >\n          {isChecking ? 'Checking...' : 'Refresh'}\n        </button>\n      </div>\n      \n      {showDetails && authStatus && !authStatus.valid && (\n        <div className=\"mt-2 p-3 bg-red-50 border border-red-200 rounded-md text-sm\">\n          <div className=\"font-medium text-red-800 mb-1\">\n            Authentication Issue\n          </div>\n          <div className=\"text-red-700 mb-2\">\n            {getErrorDetails()}\n          </div>\n          <div className=\"text-red-600\">\n            <strong>Suggested action:</strong> {getSuggestions()}\n          </div>\n          \n          {authStatus.userInfo && (\n            <div className=\"mt-2 pt-2 border-t border-red-200\">\n              <div className=\"font-medium text-red-800 mb-1\">Debug Info:</div>\n              <div className=\"text-xs text-red-600 font-mono\">\n                User ID: {authStatus.userInfo.userId}<br/>\n                Token Use: {authStatus.userInfo.tokenUse}<br/>\n                Error Code: {authStatus.code}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AuthStatusIndicator;