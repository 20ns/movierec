
service: movierec-backend

frameworkVersion: '^4.0.0'

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-north-1 # Ensure this matches your deployed region
  stage: dev
  environment:
    USER_POOL_ID: ${env:REACT_APP_COGNITO_USER_POOL_ID}
    COGNITO_CLIENT_ID: ${env:REACT_APP_COGNITO_CLIENT_ID}
    USER_PREFERENCES_TABLE: UserPreferences
    RECOMMENDATIONS_CACHE_TABLE: MovieRecCache
    USER_FAVORITES_TABLE: Favourites
    USER_WATCHLIST_TABLE: Watchlist
    TMDB_API_KEY: ${env:REACT_APP_TMDB_API_KEY} # Ensure TMDB_API_KEY is set in your environment
    IS_OFFLINE: true # Flag for local development

plugins:
  - serverless-offline
  # - serverless-dynamodb-local  # Temporarily disabled
  - serverless-dotenv-plugin

custom:
  serverless-offline:
    httpPort: 3001
    lambdaPort: 3002
  # dynamodb:  # Temporarily disabled
  #   start:
  #     port: 8000
  #     inMemory: true
  #     migrate: true
  #   stages:
  #     - dev
  #   tables:
  #     - UserPreferences
  #     - MovieRecCache
  #     - Favourites
  #     - Watchlist

functions:
  signin:
    handler: lambda-functions/signin/index.handler
    events:
      - http:
          path: auth/signin
          method: post
          cors: true

  signup:
    handler: lambda-functions/SignupHandler/index.handler
    events:
      - http:
          path: auth/signup
          method: post
          cors: true

  refreshToken:
    handler: lambda-functions/RefreshTokenLambda/index.handler
    events:
      - http:
          path: auth/refresh
          method: post
          cors: true

  userPreferences:
    handler: lambda-functions/UserPreferencesFunction/index.handler
    events:
      - http:
          path: user/preferences
          method: get
          cors: true
      - http:
          path: user/preferences
          method: post
          cors: true

  favourites:
    handler: lambda-functions/FavouritesFunction/index.handler
    events:
      - http:
          path: user/favourites
          method: get
          cors: true
      - http:
          path: user/favourites
          method: post
          cors: true
      - http:
          path: user/favourites
          method: delete
          cors: true

  watchlist:
    handler: lambda-functions/watchlist/index.handler
    events:
      - http:
          path: user/watchlist
          method: get
          cors: true
      - http:
          path: user/watchlist
          method: post
          cors: true
      - http:
          path: user/watchlist
          method: delete
          cors: true

  recommendations:
    handler: lambda-functions/MovieRecPersonalizedApiHandler/index.handler
    events:
      - http:
          path: recommendations
          method: get
          cors: true

  mediaCache:
    handler: lambda-functions/MediaCache/index.handler
    events:
      - http:
          path: media
          method: get
          cors: true

# Define DynamoDB tables for local development
resources:
  Resources:
    UserPreferencesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: UserPreferences
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    MovieRecCacheTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: MovieRecCache
        AttributeDefinitions:
          - AttributeName: mediaId
            AttributeType: S
          - AttributeName: mediaType
            AttributeType: S
          - AttributeName: genre
            AttributeType: S
        KeySchema:
          - AttributeName: mediaId
            KeyType: HASH
          - AttributeName: mediaType
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: genre-index
            KeySchema:
              - AttributeName: genre
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    FavouritesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Favourites
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: movieId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: movieId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    WatchlistTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Watchlist
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: movieId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: movieId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
